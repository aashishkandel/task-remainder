{"version":3,"sources":["contexts/TaskListContext.js","styledComponents/styled.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","dataFromLocalStorage","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editedTask","setEditedTask","useEffect","setItem","stringify","Provider","value","addTask","title","id","Math","floor","random","removeTask","filter","task","clearTasks","findTask","item","find","editTasks","newTasks","map","children","APPContainer","styled","div","ButtonContainer","StyledForm","form","StyledUL","ul","StyledLI","li","isEmpty","IconHolder","Task","useContext","style","cursor","onClick","margin","TaskList","length","key","TaskForm","setTitle","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","App","ReactDOM","render","document","getElementById"],"mappings":"sNAEaA,EAAkBC,0BAoDhBC,EAlDiB,SAACC,GAC/B,IAAMC,EAAuBC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GADjC,EAGfC,mBAASL,GAHM,mBAGlCM,EAHkC,KAG3BC,EAH2B,OAKLF,mBAAS,MALJ,mBAKlCG,EALkC,KAKtBC,EALsB,KAOzCC,qBAAU,WACRP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC5C,CAACA,IAwBJ,OACE,kBAACV,EAAgBiB,SAAjB,CACEC,MAAO,CACLR,QACAS,QA1BU,SAACC,GACfT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,QAAOC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,eA0B7CC,WAxBa,SAACJ,GAClBV,EAASD,EAAMgB,QAAO,SAACC,GAAD,OAAUA,EAAKN,KAAOA,OAwBxCO,WAtBa,WACjBjB,EAAS,KAsBLkB,SAnBW,SAACR,GAChB,IAAMS,EAAOpB,EAAMqB,MAAK,SAACJ,GAAD,OAAUA,EAAKN,KAAOA,KAC9CR,EAAciB,IAkBVE,UAhBY,SAACZ,EAAOC,GACxB,IAAMY,EAAWvB,EAAMwB,KAAI,SAACP,GAAD,OACzBA,EAAKN,KAAOA,EAAK,CAAED,QAAOC,MAAOM,KAEnChB,EAASsB,GACTpB,EAAc,OAYVD,eAGDT,EAAMgC,W,s7CC/CN,IAAMC,EAAeC,IAAOC,IAAV,KAOZC,EAAkBF,IAAOC,IAAV,KAKfE,EAAaH,IAAOI,KAAV,KA+BVC,EAAWL,IAAOM,GAAV,KAMRC,EAAWP,IAAOQ,GAAV,KAET,SAAC1C,GAAD,OAAYA,EAAM2C,QAAU,aAAe,iBACxC,SAAC3C,GAAD,OAAYA,EAAM2C,QAAU,OAAS,MAOvCC,EAAaV,IAAOC,IAAV,K,gBCpCRU,EAnBF,SAAC,GAAc,IAAZrB,EAAW,EAAXA,KAAW,EACQsB,qBAAWjD,GAApCyB,EADiB,EACjBA,WAAYI,EADK,EACLA,SACpB,OACE,kBAACe,EAAD,KACGjB,EAAKP,MACN,kBAAC2B,EAAD,KACE,kBAAC,IAAD,CACEG,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAM3B,EAAWE,EAAKN,OAEjC,kBAAC,IAAD,CACE6B,MAAO,CAAEG,OAAQ,QAASF,OAAQ,WAClCC,QAAS,kBAAMvB,EAASF,EAAKN,UCExBiC,EAfE,WAAO,IACd5C,EAAUuC,qBAAWjD,GAArBU,MACR,OACE,kBAACgC,EAAD,KACGhC,EAAM6C,OACL7C,EAAMwB,KAAI,SAACP,GACT,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAM6B,IAAK7B,EAAKN,QAGrC,kBAACuB,EAAD,CAAUE,SAAO,GAAjB,2CCkCOW,EA5CE,WAAO,IAAD,EACkCR,qBACrDjD,GADMmB,EADa,EACbA,QAASS,EADI,EACJA,WAAYI,EADR,EACQA,UAAWpB,EADnB,EACmBA,WADnB,EAIKH,mBAAS,IAJd,mBAIdW,EAJc,KAIPsC,EAJO,KA2BrB,OARA5C,qBAAU,WAEN4C,EADE9C,EACOA,EAAWQ,MAEX,MAEV,CAACR,IAGF,kBAAC4B,EAAD,CAAYmB,SAnBO,SAACC,GACpBA,EAAEC,iBACGjD,EAIHoB,EAAUZ,EAAOR,EAAWS,KAH5BF,EAAQC,GACRsC,EAAS,OAgBT,2BACEI,SAxBe,SAACF,GACpBF,EAASE,EAAEG,OAAO7C,QAwBd8C,KAAK,OACL9C,MAAOE,EACP6C,YAAY,iBACZC,UAAQ,IAEV,kBAAC3B,EAAD,KACE,4BAAQyB,KAAK,UAAUpD,EAAa,OAAS,OAC7C,4BAAQwC,QAASxB,GAAjB,aCzBOuC,EAXH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC/B,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPRgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.db8eb121.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const dataFromLocalStorage = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(dataFromLocalStorage);\r\n\r\n  const [editedTask, setEditedTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (title) => {\r\n    setTasks([...tasks, { title, id: Math.floor(Math.random() * 100000) }]);\r\n  };\r\n  const removeTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n  const clearTasks = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  const findTask = (id) => {\r\n    const item = tasks.find((task) => task.id === id);\r\n    setEditedTask(item);\r\n  };\r\n  const editTasks = (title, id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { title, id } : task\r\n    );\r\n    setTasks(newTasks);\r\n    setEditedTask(null);\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearTasks,\r\n        findTask,\r\n        editTasks,\r\n        editedTask,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const APPContainer = styled.div`\r\n  background-color: #222831;\r\n  height: 80vh;\r\n  width: 94vw;\r\n  margin: 40px auto;\r\n  border-radius: 10px;\r\n`;\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n  input {\r\n    background-color: #f2a365;\r\n    border: 0;\r\n    width: 90%;\r\n    height: 50px;\r\n    padding: 0 20px;\r\n    margin: 10px auto;\r\n    font-size: 18px;\r\n    border-radius: 10px;\r\n    color: #ececec;\r\n  }\r\n  input::placeholder {\r\n    color: rgba(239, 243, 198, 0.5);\r\n  }\r\n  input:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n  button {\r\n    height: 44px;\r\n    width: 100px;\r\n    border-radius: 5px;\r\n    border: 0;\r\n    background-color: #f2a365;\r\n    cursor: pointer;\r\n    font-weight: bolder;\r\n    color: #ececec;\r\n  }\r\n`;\r\n\r\nexport const StyledUL = styled.ul`\r\n  font-size: 31px;\r\n  color: purple;\r\n  margin-top: 15px;\r\n`;\r\n\r\nexport const StyledLI = styled.li`\r\n  list-style-type: none;\r\n  margin: ${(props) => (props.isEmpty ? \"100px 10px\" : \"0 0 0 -20px\")};\r\n  font-size: ${(props) => (props.isEmpty ? \"2rem\" : \"\")};\r\n  word-wrap: break-word;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const IconHolder = styled.div`\r\n  margin-bottom: -5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../contexts/TaskListContext\";\r\nimport { StyledLI, IconHolder } from \"../styledComponents/styled\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst Task = ({ task }) => {\r\n  const { removeTask, findTask } = useContext(TaskListContext);\r\n  return (\r\n    <StyledLI>\r\n      {task.title}\r\n      <IconHolder>\r\n        <MdDelete\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => removeTask(task.id)}\r\n        />\r\n        <FiEdit\r\n          style={{ margin: \"0 9px\", cursor: \"pointer\" }}\r\n          onClick={() => findTask(task.id)}\r\n        />\r\n      </IconHolder>\r\n    </StyledLI>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../contexts/TaskListContext\";\r\nimport Task from \"./Task\";\r\nimport { StyledUL, StyledLI } from \"../styledComponents/styled\";\r\n\r\nconst TaskList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n  return (\r\n    <StyledUL>\r\n      {tasks.length ? (\r\n        tasks.map((task) => {\r\n          return <Task task={task} key={task.id} />;\r\n        })\r\n      ) : (\r\n        <StyledLI isEmpty>U ain't got nothin' to do, add smthng</StyledLI>\r\n      )}\r\n    </StyledUL>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { TaskListContext } from \"../contexts/TaskListContext\";\r\nimport { StyledForm, ButtonContainer } from \"../styledComponents/styled\";\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearTasks, editTasks, editedTask } = useContext(\r\n    TaskListContext\r\n  );\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!editedTask) {\r\n      addTask(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      editTasks(title, editedTask.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editedTask) {\r\n      setTitle(editedTask.title);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n  }, [editedTask]);\r\n\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit}>\r\n      <input\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        value={title}\r\n        placeholder=\"wt u gonna do?\"\r\n        required\r\n      />\r\n      <ButtonContainer>\r\n        <button type=\"submit\">{editedTask ? \"Edit\" : \"Add\"}</button>\r\n        <button onClick={clearTasks}> Clear</button>\r\n      </ButtonContainer>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskListContextProvider from \"../contexts/TaskListContext\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport { APPContainer } from \"../styledComponents/styled\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <TaskListContextProvider>\r\n      <APPContainer>\r\n        <TaskForm />\r\n        <TaskList />\r\n      </APPContainer>\r\n    </TaskListContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}